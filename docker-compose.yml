services:
  db:
    image: postgres:17
    container_name: postgres-docker
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.docker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-docker
    ports:
      - "5675:5672"
      - "15675:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  django-web:
    build: .
    container_name: django-docker
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.docker      
    volumes:
      - app_data:/app
      - ./logs:/app/logs
      - ./staticfiles:/app/staticfiles
      - ./dicom:/app/folders
      - ./yaml-templates:/app/yaml-templates
      - "/mnt/share/dicom_processing_test/datastore:/app/datastore"
    command: ["./entrypoint.docker.sh"]
    environment:
      - DOCKER_CONTAINER=true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  celery:
    build: .
    container_name: celery-docker
    command: ["./entrypoint.docker.sh", "celery"]
    volumes:
      - app_data:/app
      - ./logs:/app/logs
      - ./staticfiles:/app/staticfiles
      - ./dicom:/app/folders      
      - ./yaml-templates:/app/yaml-templates
      - "/mnt/share/dicom_processing_test/datastore:/app/datastore"
    env_file:
      - .env.docker
    environment:
      - DOCKER_CONTAINER=true
    depends_on:
      db:
        condition: service_healthy
      django-web:
        condition: service_started
      rabbitmq:
        condition: service_started
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  celery-beat:
    build: .
    container_name: celery-beat-docker
    command: ["./entrypoint.docker.sh", "celery-beat"]
    volumes:
      - app_data:/app
      - ./logs:/app/logs
      - ./staticfiles:/app/staticfiles
      - ./dicom:/app/folders
      - ./yaml-templates:/app/yaml-templates
      - "/mnt/share/dicom_processing_test/datastore:/app/datastore"
    env_file:
      - .env.docker
    environment:
      - DOCKER_CONTAINER=true
    depends_on:
      db:
        condition: service_healthy
      django-web:
        condition: service_started
      rabbitmq:
        condition: service_started
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  frontend-proxy:
    image: nginx:latest
    container_name: nginx-docker
    ports:
      - "8001:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/staticfiles:ro
    depends_on:
      - django-web
volumes:
  postgres_data:
  app_data: