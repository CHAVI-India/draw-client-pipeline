services:
  db:
    image: postgres:17
    container_name: postgres-docker
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.docker
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=draw-client
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-docker
    ports:
      - "5675:5672"
      - "15675:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  django-web:
    build: .
    container_name: django-docker
    depends_on:
      - db
    env_file:
      - .env.docker      
    volumes:
      - ./logs:/app/logs
      - ./static:/app/staticfiles
      - /mnt/share/dicom_processing_test/datastore:/app/datastore # Modify this line to match the path of the datastore for the machine. Keep the /app/datastore path as it is as it will map to a specific directory inside the container.
    command: ["./entrypoint.docker.sh"]

  celery:
    build: .
    container_name: celery-docker
    command: ["./entrypoint.docker.sh", "celery"]
    volumes:
      - ./static:/app/staticfiles
      - ./logs:/app/logs
    env_file:
      - .env.docker
    depends_on:
      - django-web
      - rabbitmq

  celery-beat:
    build: .
    container_name: celery-beat-docker
    command: ["./entrypoint.docker.sh", "celery-beat"]
    volumes:
      - ./static:/app/staticfiles
      - ./logs:/app/logs
    env_file:
      - .env.docker
    depends_on:
      - django-web
      - rabbitmq

  frontend-proxy:
    image: nginx:latest
    container_name: nginx-docker
    ports:
      - "8001:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/static:ro
    depends_on:
      - django-web
volumes:
  postgres_data:
